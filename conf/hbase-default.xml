<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Copyright 2007 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <property>
    <name>hbase.master</name>
    <value>0.0.0.0:60000</value>
    <description>The host and port that the HBase master runs at.
        TODO: Support 'local' (All running in single context).
    </description>
  </property>
  <property>
    <name>hbase.master.info.port</name>
    <value>60010</value>
    <description>The port for the hbase master web UI
    Set to -1 if you do not want the info server to run.
    </description>
  </property>
  <property>
    <name>hbase.master.info.bindAddress</name>
    <value>0.0.0.0</value>
    <description>The address for the hbase master web UI
    </description>
  </property>
  <property>
    <name>hbase.regionserver</name>
    <value>0.0.0.0:60020</value>
    <description>The host and port a HBase region server runs at.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.info.port</name>
    <value>60030</value>
    <description>The port for the hbase regionserver web UI
    Set to -1 if you do not want the info server to run.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.info.bindAddress</name>
    <value>0.0.0.0</value>
    <description>The address for the hbase regionserver web UI
    </description>
  </property>
  <property>
    <name>hbase.regionserver.class</name>
    <value>org.apache.hadoop.hbase.HRegionInterface</value>
    <description>An interface that is assignable to HRegionInterface.  Used in HClient for
    opening proxy to remote region server.
    </description>
  </property>
  <property>
    <name>hbase.rootdir</name>
    <value>${hadoop.tmp.dir}/hbase</value>
    <description>The directory shared by region servers.
    </description>
  </property>
  <property>
    <name>hbase.client.pause</name>
    <value>10000</value>
    <description>General client pause value.  Used mostly as value to wait
    before running a retry of a failed get, region lookup, etc.</description>
  </property>
  <property>
    <name>hbase.client.retries.number</name>
    <value>5</value>
    <description>Maximum retries.  Used as maximum for all retryable
    operations such as fetching of the root region from root region
    server, getting a cell's value, starting a row update, etc.
    Default: 5.
    </description>
  </property>
  <property>
    <name>hbase.master.meta.thread.rescanfrequency</name>
    <value>60000</value>
    <description>How long the HMaster sleeps (in milliseconds) between scans of
    the root and meta tables.
    </description>
  </property>
  <property>
    <name>hbase.master.lease.period</name>
    <value>30000</value>
    <description>HMaster server lease period in milliseconds. Default is
    30 seconds.  Region servers must report in within this period else
    they are considered dead.  On loaded cluster, may need to up this
    period.</description>
  </property>
  <property>
    <name>hbase.regionserver.lease.period</name>
    <value>30000</value>
    <description>HRegion server lease period in milliseconds. Default is
    30 seconds. Clients must report in within this period else they are
    considered dead.</description>
  </property>
  <property>
    <name>hbase.server.thread.wakefrequency</name>
    <value>10000</value>
    <description>Time to sleep in between searches for work (in milliseconds).
    Used as sleep interval by service threads such as META scanner and log roller.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.handler.count</name>
    <value>10</value>
    <description>Count of RPC Server instances spun up on RegionServers
    Same property is used by the HMaster for count of master handlers.
    Default is 10.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.msginterval</name>
    <value>3000</value>
    <description>Interval between messages from the RegionServer to HMaster
    in milliseconds.  Default is 15. Set this value low if you want unit
    tests to be responsive.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.maxlogentries</name>
    <value>30000</value>
    <description>Rotate the HRegion HLogs when count of entries exceeds this
    value.  Default: 30,000.  Value is checked by a thread that runs every
    hbase.server.thread.wakefrequency.
    </description>
  </property>
  <property>
    <name>hbase.hregion.memcache.flush.size</name>
    <value>16777216</value>
    <description>
    A HRegion memcache will be flushed to disk if size of the memcache
    exceeds this number of bytes.  Value is checked by a thread that runs
    every hbase.server.thread.wakefrequency.  
    </description>
  </property>
  <property>
    <name>hbase.hregion.memcache.block.multiplier</name>
    <value>2</value>
    <description>
    Block updates if memcache has hbase.hregion.block.memcache
    time hbase.hregion.flush.size bytes.  Useful preventing
    runaway memcache during spikes in update traffic.  Without an
    upper-bound, memcache fills such that when it flushes the
    resultant flush files take a long time to compact or split, or
    worse, we OOME.
    </description>
  </property>
  <property>
    <name>hbase.hregion.max.filesize</name>
    <value>67108864</value>
    <description>
    Maximum desired file size for an HRegion.  If filesize exceeds
    value + (value / 2), the HRegion is split in two.  Default: 64M.
    If too large, splits will take so long, clients timeout.
    </description>
  </property>
  <property>
    <name>hbase.hstore.compactionThreshold</name>
    <value>3</value>
    <description>
    If more than this number of HStoreFiles in any one HStore
    (one HStoreFile is written per flush of memcache) then a compaction
    is run to rewrite all HStoreFiles files as one.  Larger numbers
    put off compaction but when it runs, it takes longer to complete.
    During a compaction, updates cannot be flushed to disk.  Long
    compactions require memory sufficient to carry the logging of
    all updates across the duration of the compaction.
    
    If too large, clients timeout during compaction.
    </description>
  </property>
  <property>
    <name>hbase.regionserver.thread.splitcompactcheckfrequency</name>
    <value>15000</value>
    <description>How often a region server runs the split/compaction check.
    </description>
  </property>

  <!-- HbaseShell Configurations -->
  <property>
 	<name>hbaseshell.jline.bell.enabled</name>
  	<value>true</value>
  	<description>
  		if true, enable audible keyboard bells if an alert is required.
  	</description>
  </property>  
  <property>
 	<name>hbaseshell.formatter</name>
  	<value>org.apache.hadoop.hbase.shell.formatter.AsciiTableFormatter</value>
  	<description>TableFormatter to use outputting HQL result sets.
  	</description>
  </property>  
</configuration>
